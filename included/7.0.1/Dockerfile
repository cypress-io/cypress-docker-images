# WARNING: this file was autogenerated by generate-included-image.js
# using
#   npm run add:included -- 7.0.1 cypress/browsers:node14.16.0-chrome89-ff86
#
# build this image with command
#   docker build -t cypress/included:7.0.1 .
#
FROM cypress/browsers:node14.16.0-chrome89-ff86

# avoid too many progress messages
# https://github.com/cypress-io/cypress/issues/1243
ENV CI=1 \
  # disable shared memory X11 affecting Cypress v4 and Chrome
  # https://github.com/cypress-io/cypress-docker-images/issues/270
  QT_X11_NO_MITSHM=1 \
  _X11_NO_MITSHM=1 \
  _MITSHM=0 \
  # point Cypress at the /root/cache no matter what user account is used
  # see https://on.cypress.io/caching
  CYPRESS_CACHE_FOLDER=/root/.cache/Cypress

# should be root user
RUN echo "whoami: $(whoami)" \
  && npm config -g set user $(whoami) \
  # command "id" should print:
  # uid=0(root) gid=0(root) groups=0(root)
  # which means the current user is root
  && id \
  && npm install -g "cypress@7.0.1" --force \
  && cypress verify \
  # Cypress cache and installed version
  # should be in the root user's home folder
  && cypress cache path \
  && cypress cache list \
  && cypress info \
  && cypress version \
  && ls -la /root \
  # give every user read access to the "/root" folder where the binary is cached
  # we really only need to worry about the top folder, fortunately
  && chmod 755 /root \
  # Show where Node loads required modules from
  && node -p 'module.paths' \
  && echo  " node version:    $(node -v) \n" \
    "npm version:     $(npm -v) \n" \
    "yarn version:    $(yarn -v) \n" \
    "debian version:  $(cat /etc/debian_version) \n" \
    "user:            $(whoami) \n" \
    "chrome:          $(google-chrome --version || true) \n" \
    "firefox:         $(firefox --version || true) \n" \
    "cypress:         $(cypress version) \n"

ENTRYPOINT ["cypress", "run"]
